------------------------------------------------------------------------------
-- Induction principle for N.
------------------------------------------------------------------------------

{-# OPTIONS --no-universe-polymorphism #-}
{-# OPTIONS --without-K #-}

module Examples.FOTC.Data.Nat.CoqType where

open import FOTC.Base

------------------------------------------------------------------------------

data N : D → Set where
  zN : N zero
  sN : ∀ {n} → N n → N (succ₁ n)

indN : (P : D → Set) →
       P zero →
       (∀ {n} → N n → P n → P (succ₁ n)) →
       ∀ {n} → N n → P n
indN P p0 h zN      = p0
indN P p0 h (sN Nn) = h Nn (indN P p0 h Nn)

-- Induction principle generated by Coq when we define the data type N in Set.
indN-Coq : (P : {d : D} → N d → Set) →
           P zN →
           (∀ {n} → (Nn : N n) → P Nn → P (sN Nn)) →
           ∀ {n} → (Nn : N n) → P Nn
indN-Coq P P0 h zN      = P0
indN-Coq P P0 h (sN Nn) = h Nn (indN-Coq P P0 h Nn)
